#!/bin/sh
set -e

# Run a Squid caching proxy with Docker (as a daemon).
# The container it's based on (chrisdaish/squid) is about 18MB.
# 
# To customize the Squid configuration on start up, just create a
# file 'squid.conf' or pass one via the SQUID_CONF environment variable.
# The squid.conf.example file in this directory should work.

# load .env variables
[ -r .env ] && . ./.env

_usage () {
    printf "Usage: $0 [OPTIONS]

This script runs a Squid proxy in a background Docker container.

Options:
    -f FILE             The FULL path to a Squid config file
    -c NAME             Name of a persistent Docker volume for the squid cache
    -C DIR              The path to the certs/ directory to volume-map in
    -s NAME             Name of a persistent Docker volume for the SSL cert database
    -h                  This screen
"
    exit 1
}

while getopts "f:c:C:s:h" args ; do
    case $args in
        f)
            SQUID_CONF="-v $OPTARG:/etc/squid/squid.conf:ro"; shift 2 ;;
        c)
            SQUID_VOL="-v $OPTARG:/var/cache/squid"; shift 2 ;;
        C)
            SQUID_CERT="-v $OPTARG:/etc/squid/certs"; shift 2 ;;
        s)
            SQUID_SSLDB="-v $OPTARG:/var/lib/ssl_db"; shift 2 ;;
        \?)
            echo "unknown $arg - $OPTARG" ; _usage ;;
        h|help)
            _usage ;;
        *)
            echo "error: invalid arg $arg - $OPTARG" ; exit 1 ;;
    esac
done
if [ $# -gt 0 ] ; then
    echo "$0: Error: unexpected arguments"
    _usage
fi

set -x
docker run \
    --rm \
    -d \
    --hostname  "squidcache" \
    --name      "squidcache" \
    $SQUID_CONF \
    $SQUID_VOL \
    $SQUID_CERT \
    -v /etc/localtime:/etc/localtime:ro \
    -p 3128:3128 \
    -p 3132:3132 \
    "$DOCKER_IMG" \
    "$@"

# For an intercepting proxy:
# 
#   * Create a valid squid config, and pass it in the above command like this: 
#           -v /etc/squid/squid.conf:/etc/squid/squid.conf:ro \
# 
#   * Add '--net=host' in the above command
# 
#   * Make sure your squid host has forwarding and redirect enabled:
#           ./linux-network.sh ip-forward enable
#           ./linux-network.sh iptables-redirect enable
